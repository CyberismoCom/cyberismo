{
  "title": "Card",
  "$id": "cardBaseSchema",
  "description": "Cards represent different types of tickets, issues and documents. All cards must be valid against this parent schema.",
  "type": "object",
  "additionalProperties": true,
  "properties": {
    "cardType": {
      "type": "string",
      "minLength": 1,
      "description": "The name of the card type",
      "pattern": "^[A-Za-z]*/?[A-Za-z]*/?[A-Za-z-_]+$"
    },
    "title": {
      "type": "string",
      "minLength": 1,
      "description": "A short title of the card"
    },
    "workflowState": {
      "type": "string",
      "description": "the name of the card's current state in the workflow"
    },
    "rank": {
      "type": "string",
      "description": "The rank of the card in relative to its siblings"
    },
    "lastTransitioned": {
      "type": "string",
      "format": "date-time",
      "description": "The date and time of the last transition of the card"
    },
    "lastUpdated": {
      "type": "string",
      "format": "date-time",
      "description": "The date and time of the last update of the card"
    },
    "labels": {
      "type": "array",
      "description": "Labels or tags that can be used for organising cards",
      "items": {
        "type": "string",
        "minLength": 1
      }
    },
    "links": {
      "type": "array",
      "description": "links to or from this card to other cards",
      "items": {
        "type": "object",
        "properties": {
          "cardKey": {
            "type": "string",
            "minLength": 3,
            "maxLength": 20,
            "pattern": "^[a-z]+_[0-9a-z]+$"
          },
          "linkType": {
            "description": "The name of the link type. For example, 'base/linkTypes/causes'",
            "type": "string"
          },
          "linkDescription": {
            "type": "string",
            "description": "A description of the link"
          }
        },
        "required": ["cardKey", "linkType"],
        "additionalProperties": false
      }
    },
    "templateCardKey": {
      "type": "string",
      "description": "Card key from which this card has been instantiated"
    }
  },
  "required": ["title", "cardType", "workflowState", "rank"]
}
