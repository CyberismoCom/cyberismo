name: Build Native Prebuilds

on:
  push:
    branches:
      - main
    paths:
      - 'tools/node-clingo/**'
  pull_request:
    paths:
      - 'tools/node-clingo/**'
  workflow_dispatch:

jobs:
  build-prebuilds:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Native builds
          - os: ubuntu-latest
            arch: x64
            cross: false
          - os: macos-13
            arch: x64
            cross: false
          - os: macos-latest # Apple Silicon runner
            arch: arm64
            cross: false
          - os: windows-latest
            arch: x64
            cross: false
          
         # Cross-compilation builds
          - os: ubuntu-latest
            arch: arm64
            cross: true

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.12
          auto-update-conda: true
          activate-environment: cyberismo
          environment-file: environment.yml

      - name: Install clingo
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gringo
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@cyberismocom'

      - name: Install dependencies
        working-directory: tools/node-clingo
        run: pnpm install

      - name: Build native prebuilds
        if: matrix.cross == false
        working-directory: tools/node-clingo
        run: npm run build-prebuildify
        env:
          PREBUILD_ARCH: ${{ matrix.arch }}

      - name: Build ARM64 prebuilds (cross-compilation)
        if: matrix.cross == true && matrix.arch == 'arm64'
        working-directory: tools/node-clingo
        run: npm run build-arm64

      - name: Upload prebuilds as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: node-clingo-prebuild-${{ runner.os }}-${{ matrix.arch }}
          path: tools/node-clingo/prebuilds/

  collect-prebuilds:
    needs: build-prebuilds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Download all prebuilds
        uses: actions/download-artifact@v4
        with:
          path: all-prebuilds

      - name: Organize prebuilds
        shell: bash
        run: |
          mkdir -p tools/node-clingo/prebuilds/
          cp -r all-prebuilds/*/* tools/node-clingo/prebuilds/
          ls -la tools/node-clingo/prebuilds/
          node tools/node-clingo/scripts/collect-prebuilds.js

      - name: Upload combined prebuilds
        uses: actions/upload-artifact@v4
        with:
          name: node-clingo-prebuilds-all
          path: tools/node-clingo/prebuilds/ 