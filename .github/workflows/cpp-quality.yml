# CodeQL analysis for C++ files.
name: "C++ Code Quality"
permissions:
  contents: read

on:
  push:
    branches: [ "main" ]
    paths:
      - 'tools/node-clingo/src/**'
      - '.clang-format'
      - '.github/workflows/cpp-quality.yml'
  pull_request:
    branches: [ "main", "temp-main" ]
    paths:
      - 'tools/node-clingo/src/**'
      - '.clang-format'
      - '.github/workflows/cpp-quality.yml'

jobs:
  format-check:
    name: Check C++ Formatting
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install clang-format
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-format
        clang-format --version

    - name: Check C++ code formatting
      run: |
        echo "Checking C++ code formatting..."
        cd tools/node-clingo

        # Check if any C++ files need formatting
        NEEDS_FORMAT=false
        for file in src/*.cc src/*.h; do
          if [ -f "$file" ]; then
            echo "Checking $file..."
            if ! clang-format --dry-run --Werror "$file" >/dev/null 2>&1; then
              echo "$file is not properly formatted"
              echo "Expected format:"
              clang-format "$file" | head -20
              echo "..."
              NEEDS_FORMAT=true
            else
              echo "$file is properly formatted"
            fi
          fi
        done

        if [ "$NEEDS_FORMAT" = true ]; then
          echo ""
          echo "Some C++ files are not properly formatted!"
          echo ""
          echo "To fix the formatting, run:"
          echo "  cd tools/node-clingo && npm run format:cpp"
          echo ""
          echo "Or format individual files:"
          echo "  clang-format -i <filename>"
          exit 1
        fi

        echo "All C++ files are properly formatted"

  build-test:
    name: Build and Test C++ Code
    runs-on: ubuntu-latest
    needs: format-check

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential python3-dev
        # Try to install clingo
        sudo apt-get install -y clingo libclingo-dev || \
        sudo apt-get install -y gringo clasp || \
        echo "Warning: Could not install clingo from apt"

    - name: Build C++ native addon
      run: |
        cd tools/node-clingo
        npm install
        echo "C++ compilation successful"
